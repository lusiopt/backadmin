// Mock Data para o Backadmin - Lusio Cidadania
// 15 pedidos fictícios com dados variados

import {
  ServiceStatus,
  User,
  Person,
  Address,
  Document,
  DocumentAttorney,
  Service,
  ServiceWithRelations,
  DocumentType,
  AuthUser,
  UserRole,
} from "./types";

// =====================================================
// MOCK SYSTEM USERS (BACKOFFICE/STAFF)
// =====================================================

export const mockSystemUsers: AuthUser[] = [
  {
    id: "sys1",
    fullName: "Admin Sistema",
    firstName: "Admin",
    lastName: "Sistema",
    email: "admin@lusio.market",
    password: "admin123",
    phone: "+351910000001",
    areaCode: "+351",
    active: true,
    createdAt: "2024-01-01T00:00:00Z",
    role: UserRole.ADMIN,
  },
  {
    id: "sys2",
    fullName: "Patricia Backoffice",
    firstName: "Patricia",
    lastName: "Backoffice",
    email: "patricia@lusio.market",
    password: "patricia123",
    phone: "+351910000002",
    areaCode: "+351",
    active: true,
    createdAt: "2024-01-01T00:00:00Z",
    role: UserRole.BACKOFFICE,
  },
  {
    id: "sys3",
    fullName: "Dra. Ana Advogada",
    firstName: "Ana",
    lastName: "Advogada",
    email: "ana.advogada@lusio.market",
    password: "ana123",
    phone: "+351910000003",
    areaCode: "+351",
    active: true,
    createdAt: "2024-01-01T00:00:00Z",
    role: UserRole.ADVOGADA,
  },
  {
    id: "sys4",
    fullName: "João Visualizador",
    firstName: "João",
    lastName: "Visualizador",
    email: "joao.visual@lusio.market",
    password: "joao123",
    phone: "+351910000004",
    areaCode: "+351",
    active: true,
    createdAt: "2024-01-01T00:00:00Z",
    role: UserRole.VISUALIZADOR,
  },
];

// =====================================================
// MOCK CLIENT USERS (CLIENTES DO SERVIÇO)
// =====================================================

const mockUsers: User[] = [
  {
    id: "1",
    fullName: "Maria Silva Santos",
    firstName: "Maria",
    lastName: "Santos",
    email: "maria.santos@email.com",
    phone: "+351912345678",
    areaCode: "+351",
    active: true,
    createdAt: "2025-01-15T10:00:00Z",
  },
  {
    id: "2",
    fullName: "João Pedro Oliveira",
    firstName: "João",
    lastName: "Oliveira",
    email: "joao.oliveira@email.com",
    phone: "+351923456789",
    areaCode: "+351",
    active: true,
    createdAt: "2025-02-20T14:30:00Z",
  },
  {
    id: "3",
    fullName: "Ana Costa Ferreira",
    firstName: "Ana",
    lastName: "Ferreira",
    email: "ana.ferreira@email.com",
    phone: "+351934567890",
    areaCode: "+351",
    active: true,
    createdAt: "2025-03-10T09:15:00Z",
  },
  {
    id: "4",
    fullName: "Carlos Eduardo Mendes",
    firstName: "Carlos",
    lastName: "Mendes",
    email: "carlos.mendes@email.com",
    phone: "+351945678901",
    areaCode: "+351",
    active: true,
    createdAt: "2025-04-05T16:45:00Z",
  },
  {
    id: "5",
    fullName: "Beatriz Almeida Lima",
    firstName: "Beatriz",
    lastName: "Lima",
    email: "beatriz.lima@email.com",
    phone: "+351956789012",
    areaCode: "+351",
    active: true,
    createdAt: "2025-05-12T11:20:00Z",
  },
];

// =====================================================
// MOCK PEOPLE (REQUERENTES)
// =====================================================

const mockPeople: Person[] = [
  {
    id: "p1",
    firstName: "Maria",
    lastName: "Silva Santos",
    profession: "Enfermeira",
    fatherFullName: "António Silva",
    motherFullName: "Rosa Silva",
    civilState: "Casada",
    nationality: "Brasileira",
    birthDate: "1985-06-15",
    cityPlace: "São Paulo",
    statePlace: "SP",
    countryPlace: "Brasil",
    gender: "F",
    userId: "1",
    createdAt: "2025-01-15T10:30:00Z",
  },
  {
    id: "p2",
    firstName: "João",
    lastName: "Pedro Oliveira",
    profession: "Engenheiro de Software",
    fatherFullName: "Manuel Oliveira",
    motherFullName: "Teresa Oliveira",
    civilState: "Solteiro",
    nationality: "Brasileira",
    birthDate: "1990-03-22",
    cityPlace: "Rio de Janeiro",
    statePlace: "RJ",
    countryPlace: "Brasil",
    gender: "M",
    userId: "2",
    createdAt: "2025-02-20T15:00:00Z",
  },
  {
    id: "p3",
    firstName: "Ana",
    lastName: "Costa Ferreira",
    profession: "Professora",
    fatherFullName: "José Costa",
    motherFullName: "Isabel Costa",
    civilState: "Casada",
    nationality: "Brasileira",
    birthDate: "1988-11-30",
    cityPlace: "Belo Horizonte",
    statePlace: "MG",
    countryPlace: "Brasil",
    gender: "F",
    userId: "3",
    createdAt: "2025-03-10T09:45:00Z",
  },
  {
    id: "p4",
    firstName: "Carlos",
    lastName: "Eduardo Mendes",
    profession: "Médico",
    fatherFullName: "Eduardo Mendes",
    motherFullName: "Marta Mendes",
    civilState: "Divorciado",
    nationality: "Brasileira",
    birthDate: "1982-07-18",
    cityPlace: "Porto Alegre",
    statePlace: "RS",
    countryPlace: "Brasil",
    gender: "M",
    userId: "4",
    createdAt: "2025-04-05T17:00:00Z",
  },
  {
    id: "p5",
    firstName: "Beatriz",
    lastName: "Almeida Lima",
    profession: "Arquiteta",
    fatherFullName: "Ricardo Almeida",
    motherFullName: "Paula Almeida",
    civilState: "Solteira",
    nationality: "Brasileira",
    birthDate: "1995-09-10",
    cityPlace: "Salvador",
    statePlace: "BA",
    countryPlace: "Brasil",
    gender: "F",
    userId: "5",
    createdAt: "2025-05-12T11:50:00Z",
  },
];

// =====================================================
// MOCK ADDRESSES
// =====================================================

const mockAddresses: Address[] = [
  {
    id: "a1",
    street: "Rua das Flores",
    number: "123",
    complement: "Apt 45",
    city: "Lisboa",
    state: "Lisboa",
    country: "Portugal",
    postalCode: "1000-100",
    serviceId: "s1",
    createdAt: "2025-01-15T11:00:00Z",
  },
  {
    id: "a2",
    street: "Avenida da República",
    number: "456",
    city: "Porto",
    state: "Porto",
    country: "Portugal",
    postalCode: "4000-200",
    serviceId: "s2",
    createdAt: "2025-02-20T15:30:00Z",
  },
  {
    id: "a3",
    street: "Rua de Santa Catarina",
    number: "789",
    complement: "2º andar",
    city: "Coimbra",
    state: "Coimbra",
    country: "Portugal",
    postalCode: "3000-300",
    serviceId: "s3",
    createdAt: "2025-03-10T10:15:00Z",
  },
];

// =====================================================
// MOCK DOCUMENTS
// =====================================================

const mockDocuments: Document[] = [
  {
    id: "d1",
    name: "certidao_nascimento.pdf",
    url: "/documents/certidao_nascimento_maria.pdf",
    type: DocumentType.BIRTH_CERTIFICATE,
    size: 2048000,
    uploadedAt: "2025-01-15T12:00:00Z",
    serviceId: "s1",
  },
  {
    id: "d2",
    name: "rg_frente.jpg",
    url: "/documents/rg_frente_maria.jpg",
    type: DocumentType.IDENTITY,
    size: 1024000,
    uploadedAt: "2025-01-15T12:05:00Z",
    serviceId: "s1",
  },
  {
    id: "d3",
    name: "antecedentes_criminais.pdf",
    url: "/documents/antecedentes_joao.pdf",
    type: DocumentType.CRIMINAL_RECORD,
    size: 3072000,
    uploadedAt: "2025-02-20T16:00:00Z",
    serviceId: "s2",
  },
];

// =====================================================
// MOCK SERVICES (15 PEDIDOS)
// =====================================================

export const mockServices: ServiceWithRelations[] = [
  // Pedido 1 - Passo 7 Esperando
  {
    id: "s1",
    status: ServiceStatus.STEP_7_WAITING,
    processNumber: null,
    entity: null,
    reference: null,
    isPaidTax: true,
    isPaidGovernment: false,
    paidTaxAt: "2025-01-16T10:00:00Z",
    hasResidenceTitle: true,
    hasBirthCertificate: true,
    hasCriminalRecord: true,
    hasIdentificationDocument: true,
    hasBrasilianCriminalRecord: true,
    createdAt: "2025-01-15T10:00:00Z",
    updatedAt: "2025-10-20T14:30:00Z",
    userId: "1",
    personId: "p1",
    user: mockUsers[0],
    person: mockPeople[0],
    address: mockAddresses[0],
    documents: [mockDocuments[0], mockDocuments[1]],
    documentsAttorney: [],
  },
  // Pedido 2 - Passo 7 Aprovado
  {
    id: "s2",
    status: ServiceStatus.STEP_7_APPROVED,
    processNumber: null,
    entity: "12345",
    reference: "123 456 789",
    isPaidTax: true,
    isPaidGovernment: false,
    paidTaxAt: "2025-02-21T10:00:00Z",
    hasResidenceTitle: true,
    hasBirthCertificate: true,
    hasCriminalRecord: true,
    hasIdentificationDocument: true,
    hasBrasilianCriminalRecord: true,
    createdAt: "2025-02-20T14:30:00Z",
    updatedAt: "2025-10-22T09:15:00Z",
    userId: "2",
    personId: "p2",
    user: mockUsers[1],
    person: mockPeople[1],
    address: mockAddresses[1],
    documents: [mockDocuments[2]],
    documentsAttorney: [],
  },
  // Pedido 3 - Passo 7 Recusado
  {
    id: "s3",
    status: ServiceStatus.STEP_7_RECUSED,
    processNumber: null,
    entity: null,
    reference: null,
    isPaidTax: true,
    isPaidGovernment: false,
    paidTaxAt: "2025-03-11T10:00:00Z",
    refuseJustification: "Documentos ilegíveis. Por favor, faça upload de documentos com melhor qualidade.",
    hasResidenceTitle: false,
    hasBirthCertificate: true,
    hasCriminalRecord: true,
    hasIdentificationDocument: true,
    hasBrasilianCriminalRecord: true,
    createdAt: "2025-03-10T09:15:00Z",
    updatedAt: "2025-10-21T16:45:00Z",
    userId: "3",
    personId: "p3",
    user: mockUsers[2],
    person: mockPeople[2],
    address: mockAddresses[2],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 4 - Passo 7 Quase
  {
    id: "s4",
    status: ServiceStatus.STEP_7_ALMOST,
    processNumber: null,
    entity: null,
    reference: null,
    isPaidTax: true,
    isPaidGovernment: false,
    paidTaxAt: "2025-04-06T10:00:00Z",
    almostJustification: "Falta apenas a certidão de antecedentes criminais brasileira.",
    hasResidenceTitle: true,
    hasBirthCertificate: true,
    hasCriminalRecord: true,
    hasIdentificationDocument: true,
    hasBrasilianCriminalRecord: false,
    createdAt: "2025-04-05T16:45:00Z",
    updatedAt: "2025-10-22T11:20:00Z",
    userId: "4",
    personId: "p4",
    user: mockUsers[3],
    person: mockPeople[3],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 5 - Passo 8
  {
    id: "s5",
    status: ServiceStatus.STEP_8,
    processNumber: null,
    entity: "54321",
    reference: "987 654 321",
    isPaidTax: true,
    isPaidGovernment: false,
    paidTaxAt: "2025-05-13T10:00:00Z",
    createdAt: "2025-05-12T11:20:00Z",
    updatedAt: "2025-10-23T08:45:00Z",
    userId: "5",
    personId: "p5",
    user: mockUsers[4],
    person: mockPeople[4],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 6 - Passo 8 Confirmado pelo Cliente
  {
    id: "s6",
    status: ServiceStatus.STEP_8_CLIENT_CONFIRMED,
    processNumber: null,
    entity: "11111",
    reference: "111 222 333",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2025-06-01T10:00:00Z",
    paidGovernmentAt: "2025-06-15T14:30:00Z",
    createdAt: "2025-06-01T09:00:00Z",
    updatedAt: "2025-10-23T10:00:00Z",
    userId: "1",
    personId: "p1",
    user: mockUsers[0],
    person: mockPeople[0],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 7 - Passo 8 Confirmado pelo Governo
  {
    id: "s7",
    status: ServiceStatus.STEP_8_CONFIRMED_BY_GOVERNMENT,
    processNumber: "PT2025123456",
    entity: "22222",
    reference: "444 555 666",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2025-07-01T10:00:00Z",
    paidGovernmentAt: "2025-07-10T09:30:00Z",
    submissionDate: "2025-07-15T16:00:00Z",
    createdAt: "2025-07-01T08:30:00Z",
    updatedAt: "2025-10-23T11:15:00Z",
    userId: "2",
    personId: "p2",
    user: mockUsers[1],
    person: mockPeople[1],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 8 - Submetido
  {
    id: "s8",
    status: ServiceStatus.SUBMITTED,
    processNumber: "PT2025234567",
    processPassword: "senha123",
    entity: "33333",
    reference: "777 888 999",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2025-08-01T10:00:00Z",
    paidGovernmentAt: "2025-08-10T11:00:00Z",
    submissionDate: "2025-08-20T14:30:00Z",
    createdAt: "2025-08-01T09:45:00Z",
    updatedAt: "2025-10-23T09:30:00Z",
    userId: "3",
    personId: "p3",
    user: mockUsers[2],
    person: mockPeople[2],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 9 - Em análise
  {
    id: "s9",
    status: ServiceStatus.UNDER_ANALYSIS,
    processNumber: "PT2025345678",
    processPassword: "senha456",
    entity: "44444",
    reference: "100 200 300",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2025-09-01T10:00:00Z",
    paidGovernmentAt: "2025-09-05T15:00:00Z",
    submissionDate: "2025-09-10T10:30:00Z",
    createdAt: "2025-09-01T08:15:00Z",
    updatedAt: "2025-10-20T14:45:00Z",
    userId: "4",
    personId: "p4",
    user: mockUsers[3],
    person: mockPeople[3],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 10 - Aguarda resposta
  {
    id: "s10",
    status: ServiceStatus.WAITING_RESPONSE,
    processNumber: "PT2025456789",
    processPassword: "senha789",
    entity: "55555",
    reference: "400 500 600",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2025-02-01T10:00:00Z",
    paidGovernmentAt: "2025-02-10T12:00:00Z",
    submissionDate: "2025-02-15T09:00:00Z",
    createdAt: "2025-02-01T07:30:00Z",
    updatedAt: "2025-09-15T11:30:00Z",
    userId: "5",
    personId: "p5",
    user: mockUsers[4],
    person: mockPeople[4],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 11 - Para decisão
  {
    id: "s11",
    status: ServiceStatus.FOR_DECISION,
    processNumber: "PT2025567890",
    processPassword: "senha012",
    entity: "66666",
    reference: "700 800 900",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2025-01-01T10:00:00Z",
    paidGovernmentAt: "2025-01-10T13:30:00Z",
    submissionDate: "2025-01-15T15:45:00Z",
    createdAt: "2025-01-01T06:45:00Z",
    updatedAt: "2025-10-01T08:20:00Z",
    userId: "1",
    personId: "p1",
    user: mockUsers[0],
    person: mockPeople[0],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 12 - Concluído
  {
    id: "s12",
    status: ServiceStatus.COMPLETED,
    processNumber: "PT2025678901",
    processPassword: "senha345",
    entity: "77777",
    reference: "111 333 555",
    isPaidTax: true,
    isPaidGovernment: true,
    paidTaxAt: "2024-12-01T10:00:00Z",
    paidGovernmentAt: "2024-12-10T16:00:00Z",
    submissionDate: "2024-12-15T11:15:00Z",
    createdAt: "2024-12-01T05:30:00Z",
    updatedAt: "2025-06-01T14:00:00Z",
    userId: "2",
    personId: "p2",
    user: mockUsers[1],
    person: mockPeople[1],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 13 - Passo 5
  {
    id: "s13",
    status: ServiceStatus.STEP_5,
    processNumber: null,
    entity: null,
    reference: null,
    isPaidTax: true,
    isPaidGovernment: false,
    paidTaxAt: "2025-10-15T10:00:00Z",
    hasResidenceTitle: false,
    hasBirthCertificate: false,
    hasCriminalRecord: false,
    hasIdentificationDocument: false,
    hasBrasilianCriminalRecord: false,
    createdAt: "2025-10-15T09:00:00Z",
    updatedAt: "2025-10-22T15:30:00Z",
    userId: "3",
    personId: "p3",
    user: mockUsers[2],
    person: mockPeople[2],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 14 - Passo 3
  {
    id: "s14",
    status: ServiceStatus.STEP_3,
    processNumber: null,
    entity: null,
    reference: null,
    isPaidTax: false,
    isPaidGovernment: false,
    createdAt: "2025-10-20T10:30:00Z",
    updatedAt: "2025-10-21T09:45:00Z",
    userId: "4",
    personId: "p4",
    user: mockUsers[3],
    person: mockPeople[3],
    documents: [],
    documentsAttorney: [],
  },
  // Pedido 15 - Passo 1
  {
    id: "s15",
    status: ServiceStatus.STEP_1,
    processNumber: null,
    entity: null,
    reference: null,
    isPaidTax: false,
    isPaidGovernment: false,
    createdAt: "2025-10-23T08:00:00Z",
    updatedAt: "2025-10-23T08:00:00Z",
    userId: "5",
    personId: "p5",
    user: mockUsers[4],
    person: mockPeople[4],
    documents: [],
    documentsAttorney: [],
  },
];

// =====================================================
// HELPER FUNCTIONS
// =====================================================

export const getServiceById = (id: string): ServiceWithRelations | undefined => {
  return mockServices.find((s) => s.id === id);
};

export const getServicesByStatus = (status: ServiceStatus): ServiceWithRelations[] => {
  return mockServices.filter((s) => s.status === status);
};

export const getServicesByUserId = (userId: string): ServiceWithRelations[] => {
  return mockServices.filter((s) => s.userId === userId);
};

export const searchServices = (query: string): ServiceWithRelations[] => {
  const lowerQuery = query.toLowerCase();
  return mockServices.filter(
    (s) =>
      s.user.fullName.toLowerCase().includes(lowerQuery) ||
      s.user.email.toLowerCase().includes(lowerQuery) ||
      s.processNumber?.toLowerCase().includes(lowerQuery) ||
      s.person?.firstName.toLowerCase().includes(lowerQuery) ||
      s.person?.lastName.toLowerCase().includes(lowerQuery)
  );
};

// =====================================================
// EXPORTS
// =====================================================

export { mockUsers, mockPeople, mockAddresses, mockDocuments };
